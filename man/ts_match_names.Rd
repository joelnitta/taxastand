% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ts_match_names.R
\name{ts_match_names}
\alias{ts_match_names}
\title{Match taxonomic names to a reference}
\usage{
ts_match_names(
  query,
  reference,
  max_dist = 10,
  match_no_auth = FALSE,
  match_canon = FALSE,
  collapse_infra = FALSE,
  collapse_infra_exclude = NULL,
  simple = FALSE,
  tbl_out = getOption("ts_tbl_out", default = FALSE)
)
}
\arguments{
\item{query}{Character vector or dataframe; taxonomic names to be queried.
If a character vector, missing values not allowed and all values must be unique.
If a dataframe, should be taxonomic names parsed with \code{\link{ts_parse_names}()}.}

\item{reference}{Character vector or dataframe; taxonomic names to use as reference.
If a character vector, missing values not allowed and all values must be unique.
If a dataframe, should be taxonomic names parsed with \code{\link{ts_parse_names}()}.}

\item{max_dist}{Max Levenshtein distance to allow during fuzzy matching
(total insertions, deletions and substitutions). Default: 10.}

\item{match_no_auth}{Logical; If no author is given in the query and the name (without author)
occurs only once in the reference, accept the name in the reference as a match.
Default: to not allow such a match (\code{FALSE}).}

\item{match_canon}{Logical; Allow a "canonical name" match if only the genus, species epithet,
and infraspecific epithet (if present) match exactly. Default: to not allow such a match (\code{FALSE}).}

\item{collapse_infra}{Logical; if the specific epithet and infraspecific epithet
are the same, drop the infraspecific rank and epithet from the query.}

\item{collapse_infra_exclude}{Character vector; taxonomic names to exclude
from collapsing with \code{collapse_infra}. Any names used must match those in
\code{query} exactly, or they won't be excluded.}

\item{simple}{Logical; return the output in a simplified format with only the query
name, matched reference name, and match type. Default: \code{FALSE}.}

\item{tbl_out}{Logical vector of length 1; should a tibble be returned?
If \code{FALSE} (default), output will be a data.frame. This argument can
be controlled via the option \code{ts_tbl_out}; see Examples.}
}
\value{
Dataframe with the following columns (if \code{simple} is \code{FALSE}):
\itemize{
\item query: Query name
\item reference: Matched reference name
\item match_type: Type of match (for a summary of match types, \href{https://github.com/camwebb/taxon-tools/blob/master/doc/matchnames.md#matching-rules-and-output-codes}{see taxon-tools manual})
\item id_query: Unique ID of query
\item id_ref: Unique ID of reference
\item genus_hybrid_sign_query: Genus hybrid sign in query
\item genus_name_query: Genus name of query
\item species_hybrid_sign_query: Species hybrid sign in query
\item specific_epithet_query: Specific epithet of query
\item infraspecific_rank_query: Infraspecific rank of query
\item infraspecific_epithet_query: Infraspecific epithet of query
\item author_query: Taxonomic author of query
\item genus_hybrid_sign_ref: Genus hybrid sign in reference
\item genus_name_ref: Genus name of reference
\item species_hybrid_sign_ref: Species hybrid sign in reference
\item specific_epithet_ref: Specific epithet of reference
\item infraspecific_rank_ref: Infraspecific rank of reference
\item infraspecific_epithet_ref: Infraspecific epithet of reference
\item author_ref: Taxonomic author of reference
}

If \code{simple} is \code{TRUE}, only return the first three columns above.
}
\description{
Allows for orthographic differences between query and reference by using
fuzzy matching on parsed taxonomic names. Requires \href{https://github.com/camwebb/taxon-tools}{taxon-tools} to be
installed.
}
\details{
\code{taxon-tools} matches names in two steps:
\enumerate{
\item Scientific names are parsed into their component parts (genus, species,
variety, author, etc).
\item Names are fuzzily matched following taxonomic rules using the component
parts.
}

For more information on rules used for matching, \href{https://github.com/camwebb/taxon-tools/blob/master/doc/matchnames.md#matching-rules-and-output-codes}{see taxon-tools manual}.

Parsing is fairly fast (much faster than matching) but can take some time if
the number of names is very large. If multiple queries will be made (e.g., to
the same large reference database), it is recommended to first parse the
names using \code{\link{ts_parse_names}()}, and use the results as input to
\code{query} and/or \code{reference}.

\code{collapse_infra} is useful in situations where the reference database does
not use names that have the same specific epithet and infraspecific epithet.
For example, reference name "Blechnum lunare" and query "Blechnum lunare var.
lunare". In this case, if \code{collapse_infra} is \code{TRUE}, "Blechnum lunare" will
be queried instead of "Blechnum lunare var. lunare". Note that the
\code{match_type} will be "exact" even though the literal query and the matched
name are different (see example below).
}
\examples{
ts_match_names(
  "Crepidomanes minutus",
  c("Crepidomanes minutum", "Hymenophyllum polyanthos"),
  simple = TRUE
  )

# If you always want tibble output without specifying `tbl_out = TRUE` every
# time, set the option:
options(ts_tbl_out = TRUE)
ts_match_names(
  "Crepidomanes minutus",
  c("Crepidomanes minutum", "Hymenophyllum polyanthos")
  )

# Example using collapse_infra argument
ts_match_names(
  c("Crepidomanes minutus", "Blechnum lunare var. lunare", "Blechnum lunare",
    "Bar foo var. foo", "Bar foo"),
  c("Crepidomanes minutum", "Hymenophyllum polyanthos", "Blechnum lunare",
    "Bar foo"),
  collapse_infra = TRUE,
  collapse_infra_exclude = "Bar foo var. foo",
  simple = TRUE
  )

}
