% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/resolve_names.R
\name{resolve_names}
\alias{resolve_names}
\title{Resolve a vector of taxonomic names}
\usage{
resolve_names(names_to_resolve, taxonomic_standard,
  match_by = c("species", "taxon", "scientific_name"), max_dist,
  exclude = NULL, mult_syn_selection = NULL)
}
\arguments{
\item{names_to_resolve}{Vector of taxonomic names to resolve.}

\item{taxonomic_standard}{Dataframe of standard names to match to.}

\item{match_by}{One of "species", "taxon", or "scientific_name";
the type of standard name to use for matching.
Should match the type of names in \code{query}.}

\item{max_dist}{Integer; maximum distance to use during fuzzy matching.}

\item{exclude}{Optional vector of taxa to exclude from matches. Names must match
names in \code{names_to_resolve} exactly.}

\item{mult_syn_selection}{Character vector; in the case that multiple synonyms
were detected during matching, use the names specified. Names must match names in
\code{scientificName} column of \code{taxonomic_standard} exactly.}
}
\value{
Tibble. \code{taxonomicStatus} refers to the status of the queried name. If
the query was a synonym, all other taxonomic names are for the accepted name.
}
\description{
Single hits, the best-matching taxon for multiple hits, and single synonyms
matched to their accepted names are retained. These can be excluded using the
exclude list to prevent false positive matches.
}
\examples{
# Load reference taxonomy in Darwin Core format
data(filmy_taxonomy)

resolve_names(
  names_to_resolve = c(
    "Cephalomanes atrovirens Presl",
    "Gonocormus minutus (Blume) Bosch"),
  match_by = "scientific_name",
  taxonomic_standard = filmy_taxonomy,
  max_dist = 2)

resolve_names(
  names_to_resolve = c(
    "Trichomanes infundibulare",
    "Gonocormus minutus"),
  match_by = "species",
  taxonomic_standard = filmy_taxonomy,
  max_dist = 2)

resolve_names(
  names_to_resolve = c(
    "bgalkj",
    "Hymenophyllum polyanthop"),
  match_by = "species",
  taxonomic_standard = filmy_taxonomy,
  max_dist = 2)
}
